Question 1:
What kind of data structures would you use for a software built to organize the items in a supermarket? Also, specify the space and time complexities for each operation.

Answer 1:
I would like to go with "Tree" Data Structure for this case. Since I do feel that ordering item and fetching record is a key role while implementing. When it comes to a supermarket we can except data size, say to be a minimum of 10000 records. So if we use a linked-list which is also a better choice, which will be of time complexity O(n) for a linked list's operations such as access, searching, inserting, deleting a record. Which while being an expensive process for large datasets. Thus using a tree data structure, we can archive access, insert, delete and search a record in the order of O(logn). Which is very fast and can achieve greater speed when compared to other data structure such as a linked list. On the other hand, when we compare space complexity of using a linked list, insertion and deletion operation will be of the order O(1). Which is really good but then it comes to a bigger dataset, Searching will be of the order O(n) which is more. When compared with tree overall search then insert and delete operation on tree data structure which is of the order O(logn). Preferable we can use B Tree or AVL Tree for more efficiency.
